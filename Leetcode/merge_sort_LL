//7b) Program - Leetcode platform merging and sorting a linked list
SinglyLinkedListNode* mergeLists(SinglyLinkedListNode* head1, SinglyLinkedListNode* head2) {
     SinglyLinkedListNode* mergedHead = NULL;
    SinglyLinkedListNode* tail = NULL;

    while (head1 != NULL && head2 != NULL) {
        if (head1->data <= head2->data) {
            if (mergedHead == NULL) {
                mergedHead = head1;
                tail = head1;
            } else {
                tail->next = head1;
                tail = tail->next;
            }
            head1 = head1->next;
        } else {
            if (mergedHead == NULL) {
                mergedHead = head2;
                tail = head2;
            } else {
                tail->next = head2;
                tail = tail->next;
            }
            head2 = head2->next;
        }
    }

    if (head1 != NULL) {
        if (mergedHead == NULL) {
            mergedHead = head1;
        } else {
            tail->next = head1;
        }
    } else {
        if (mergedHead == NULL) {
            mergedHead = head2;
        } else {
            tail->next = head2;
        }
    }

    return mergedHead;

}
